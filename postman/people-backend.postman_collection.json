{
	"info": {
		"_postman_id": "6b108c1b-6ef9-4af7-ab8e-a12c7bdd4675",
		"name": "WATU_Postman_collection_Current",
		"description": "Contains all the APIs that are related to Sprint 1 and Sprint 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Connect",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Connect",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f790f73-7a02-4f76-b614-34f5fa7a7dc4",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting temp session token",
											"postman.setEnvironmentVariable(\"tempToken\", jsonData.data.tempToken);",
											"//printing temporary session token",
											"console.log(\"tempToken\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"7813364042\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "This API is used for both Register and Login\nValid country code and Phone number is used for testing\nParameters:\ncountryCode - M [valid US codes]\nphoneNumber - M [5-15 digits]\n\nExpected output: \nValid response\n{\n  \"data\": {\n    \"isExistingUser\": true,\n    \"isPhoneNumberVerified\": true,\n    \"tempToken\": \"string\"\n  },\n  \"message\": \"string\"\n}"
							},
							"response": [
								{
									"name": "Connect_API_Positive",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"countryCode\":\"091\",\n\"phoneNo\":\"990099{{$randomInt}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{baseURL}}/v1.0/user/api/connect",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"v1.0",
												"user",
												"api",
												"connect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Sep 2018 12:08:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "people-backend-dev.ymedia.in",
											"path": "/",
											"secure": false,
											"value": "ADB604702B3C40584267BFA85AEDB9ED",
											"key": "JSESSIONID"
										}
									],
									"body": "{\"data\":{\"isExistingUser\":false,\"tempSessionToken\":\"5519b5a8-c81e-4b25-bc19-b9879a7a6d6d\",\"phoneNumberVerified\":false},\"message\":\"Otp sent successfully.\"}"
								}
							]
						},
						{
							"name": "Connect [Resend OTP]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f790f73-7a02-4f76-b614-34f5fa7a7dc4",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting temp session token",
											"postman.setEnvironmentVariable(\"tempTokenRe\", jsonData.data.tempToken);",
											"//printing temporary session token",
											"console.log(\"tempTokenRe\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"7899364018\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "This API is used for both Register and Login\nValid country code and Phone number is used for testing\nParameters:\ncountryCode - M [valid US codes]\nphoneNumber - M [5-15 digits]\n\nExpected output: \nValid response\n{\n  \"data\": {\n    \"isExistingUser\": true,\n    \"isPhoneNumberVerified\": true,\n    \"tempToken\": \"string\"\n  },\n  \"message\": \"string\"\n}"
							},
							"response": [
								{
									"name": "Connect_API_Positive",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"countryCode\":\"091\",\n\"phoneNo\":\"990099{{$randomInt}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{baseURL}}/v1.0/user/api/connect",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"v1.0",
												"user",
												"api",
												"connect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Sep 2018 12:08:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "people-backend-dev.ymedia.in",
											"path": "/",
											"secure": false,
											"value": "ADB604702B3C40584267BFA85AEDB9ED",
											"key": "JSESSIONID"
										}
									],
									"body": "{\"data\":{\"isExistingUser\":false,\"tempSessionToken\":\"5519b5a8-c81e-4b25-bc19-b9879a7a6d6d\",\"phoneNumberVerified\":false},\"message\":\"Otp sent successfully.\"}"
								}
							]
						},
						{
							"name": "Connect[Incorrect otp]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f790f73-7a02-4f76-b614-34f5fa7a7dc4",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting temp session token",
											"postman.setEnvironmentVariable(\"tempTokenIn\", jsonData.data.tempToken);",
											"//printing temporary session token",
											"console.log(\"tempTokenIn\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"7899364077\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "This API is used for both Register and Login\nValid country code and Phone number is used for testing\nParameters:\ncountryCode - M [valid US codes]\nphoneNumber - M [5-15 digits]\n\nExpected output: \nValid response\n{\n  \"data\": {\n    \"isExistingUser\": true,\n    \"isPhoneNumberVerified\": true,\n    \"tempToken\": \"string\"\n  },\n  \"message\": \"string\"\n}"
							},
							"response": [
								{
									"name": "Connect_API_Positive",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"countryCode\":\"091\",\n\"phoneNo\":\"990099{{$randomInt}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{baseURL}}/v1.0/user/api/connect",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"v1.0",
												"user",
												"api",
												"connect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Sep 2018 12:08:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "people-backend-dev.ymedia.in",
											"path": "/",
											"secure": false,
											"value": "ADB604702B3C40584267BFA85AEDB9ED",
											"key": "JSESSIONID"
										}
									],
									"body": "{\"data\":{\"isExistingUser\":false,\"tempSessionToken\":\"5519b5a8-c81e-4b25-bc19-b9879a7a6d6d\",\"phoneNumberVerified\":false},\"message\":\"Otp sent successfully.\"}"
								}
							]
						},
						{
							"name": "Connect[Logout]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "34f3533f-8dff-4cbd-8b62-b704aa3086b6",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting temp session token",
											"postman.setEnvironmentVariable(\"tempTokenL\", jsonData.data.tempToken);",
											"//printing temporary session token",
											"console.log(\"tempTokenL\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "tempToken",
										"value": "{{tempToken1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"1784156111\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								}
							},
							"response": [
								{
									"name": "Connect_API_Positive",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"countryCode\":\"091\",\n\"phoneNo\":\"990099{{$randomInt}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{baseURL}}/v1.0/user/api/connect",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"v1.0",
												"user",
												"api",
												"connect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Sep 2018 12:08:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "people-backend-dev.ymedia.in",
											"path": "/",
											"secure": false,
											"value": "ADB604702B3C40584267BFA85AEDB9ED",
											"key": "JSESSIONID"
										}
									],
									"body": "{\"data\":{\"isExistingUser\":false,\"tempSessionToken\":\"5519b5a8-c81e-4b25-bc19-b9879a7a6d6d\",\"phoneNumberVerified\":false},\"message\":\"Otp sent successfully.\"}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "14a447d3-f37a-4347-b187-63187bac1ba4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a608c011-2de7-470d-a690-4592891fd1d1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Connect (< Min range)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65a7e22e-fe75-46e7-a02e-4a999d102aed",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\",",
											"    \"statusCode\"",
											"  ]",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"1234\" \n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "Here we are providing invlid range for phone number\nInput for Phone number:\n1.less than 5 digits = 4\n\nExpected output:\nError response"
							},
							"response": []
						},
						{
							"name": "Connect (< Min range) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65a7e22e-fe75-46e7-a02e-4a999d102aed",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\",",
											"    \"statusCode\"",
											"  ]",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"1234\" \n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "Here we are providing invlid range for phone number\nInput for Phone number:\n1.less than 5 digits = 4\n\nExpected output:\nError response"
							},
							"response": []
						},
						{
							"name": "Connect (Empty input)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65a7e22e-fe75-46e7-a02e-4a999d102aed",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\",",
											"    \"statusCode\"",
											"  ]",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"\",\n    \"phoneNumber\": \"\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "Here we are providing invlid inputs \nInputs:\n1.Empty CountryCode\n2.Empty PhoneNo."
							},
							"response": []
						},
						{
							"name": "Connect (> Max range)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65a7e22e-fe75-46e7-a02e-4a999d102aed",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\",",
											"    \"statusCode\"",
											"  ]",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"1234567891011126\" \n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								},
								"description": "Here we are providing invlid range for phone number\nInput for Phone number:\n1.less than 5digits \n2.more than 15 digits\n\nExpected output:\nError response"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Verify OTP",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Verify OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e4e945b-0613-4059-8c49-8ec31bc0bd62",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"sessionToken\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"userId\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"sessionToken\",",
											"        \"userId\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Extracing the temp session token",
											"postman.setEnvironmentVariable(\"sessionToken\", jsonData.data.sessionToken);",
											"console.log(\"sessionToken\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "deviceTypeID",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1111\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "This API is used to check the OTP entered is valid or not.\nHere we are passing Valid OTP\nIn Staging environment, the OTP is dynamic \nwe are fetching OTP via DB"
							},
							"response": []
						},
						{
							"name": "Verify_OTP[Logout]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25b1c399-b13c-46be-b410-48cdcbbd3353",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"        \"data\": {",
											"            \"type\": \"object\",",
											"            \"properties\": {",
											"                \"isExistingUser\": { \"type\": \"boolean\" },",
											"                \"tempSessionToken\": { \"type\": [\"string\", \"null\"] },",
											"                \"sessionToken\": { \"type\": \"string\"},",
											"                \"phoneNumberVerified\": { \"type\": \"boolean\" },",
											"               \"message\": { \"type\": \"string\" },",
											"            }",
											"        }",
											"    }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"sessionTokenL\", jsonData.data.sessionToken);//Setting temp session token",
											"",
											"console.log(\"sessionTokenL\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempTokenL}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "deviceTypeID",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1111\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "Provided otp no will be checked against existing OTPs."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Verify OTP (Incorrect OTP)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1851cf0-33d4-4cc3-9504-84fa55976e4d",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempTokenIn}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1234\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "This API is used to check invalid OTP are accepted or not.\nHere we are passing Invalid OTP"
							},
							"response": []
						},
						{
							"name": "Verify OTP (No Token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1851cf0-33d4-4cc3-9504-84fa55976e4d",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"pm.test(\"Verify that the Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempTokenIn}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1111\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "This API is used to check invalid Token is accepted or not.\nHere we are passing Invalid Token/No token"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resend OTP",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Re-send OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b9f33e3-7ead-4cfe-93e0-3913173998cf",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f8e3678d-ef44-46b0-a3ca-44306c3f7ebd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "tempToken",
										"value": "{{tempTokenRe}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/resend",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"resend"
									]
								},
								"description": "This API is used to resend the OTP.\nHere we use temp token for retreiving the OTP"
							},
							"response": []
						},
						{
							"name": "Verify OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e4e945b-0613-4059-8c49-8ec31bc0bd62",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"sessionToken\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"userId\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"sessionToken\",",
											"        \"userId\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Extracing the temp session token",
											"postman.setEnvironmentVariable(\"sessionToken\", jsonData.data.sessionToken);",
											"console.log(\"sessionToken\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempTokenRe}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "deviceTypeID",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1111\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "This API is used to check the OTP entered is valid or not.\nHere we are passing Valid OTP\nIn Staging environment, the OTP is dynamic \nwe are fetching OTP via DB"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Negative : Re-send OTP (Invalid TempToken)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50a8caf2-8e22-4e21-82d6-b387cf083378",
										"exec": [
											"pm.test(\"Verify that the Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  ",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "tempToken",
										"value": "1234",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/resend",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"resend"
									]
								},
								"description": "This API is used for testing with invalid temp token\nError response is expected"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sync Contacts",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Sync Contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7425ff8-268e-4238-8bf4-67830f03bd20",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"userContactList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"connectionId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"connectionStatus\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"staticProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"firstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"middleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticFirstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticMiddleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticLastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"namePrefix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nameSuffix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nickName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"gender\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"dateOfBirth\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"company\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"position\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"imageURL\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"notes\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"tagList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"userMetadataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"key\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"val\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"var jsonData=JSON.parse(responseBody);",
											"//Setting connection id, Country code and Phone number",
											"postman.setEnvironmentVariable(\"connectionId\", jsonData.data.userContactList[0].connectionId);",
											"postman.setEnvironmentVariable(\"Country_Code\", jsonData.data.userContactList[0].staticProfileData.userMetadataList[0].keyValueDataList[0].val);",
											"postman.setEnvironmentVariable(\"Pnumber\", jsonData.data.userContactList[0].staticProfileData.userMetadataList[0].keyValueDataList[1].val);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"userContactList\": [{\n\"firstName\": \"bhaskar\",\n\"lastName\": \"sengupta\",\n\"phoneticFirstName\": \"bhaskar\",\n\"gender\": \"male\",\n\"userMetadataList\": [ {\n\"label\": \"work\",\n\"keyValueDataList\": [\n{\n\"key\": \"countryCode\",\n\"val\": \"+1\"\n},\n{\n\"key\": \"phoneNumber\",\n\"val\": \"1123456{{$randomInt}}\"\n}\n],\n\"category\": \"PhoneNumber\"\n}\n\n]\n}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/contacts/sync",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"contacts",
										"sync"
									]
								},
								"description": "This API is used to add contacts to the applcation\nAll native contacts from user device will be synced to People Server or a user can create a static contact.\n\ncategory - M\nlabel - M\nkeyValueDataList - M\nkey - M\nval - M\n\nCategory value should be one of the following:\nPHONENUMBER, EMAIL, SOCIALPROFILE, ADDRESS, EVENT, WEBSITE, RELATIONSHIP, INSTANTMESSAGING, OTHER, NA"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Negative: Sync Contacts (Wrong Category)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7425ff8-268e-4238-8bf4-67830f03bd20",
										"exec": [
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userContactList\": [\n    {\n      \"company\": \"YML{{$randomInt}}\",\n      \"dateOfBirth\": \"1992-10-18T05:57:47.229Z\",\n      \"firstName\": \"Amudha\",\n      \"gender\": \"Female\",\n      \"groupNameList\": [\n        \"string\"\n      ],\n      \"imageURL\": \"https://www.cbronline.com/wp-content/uploads/2016/06/what-is-URL-770x503.jpg\",\n      \"lastName\": \"Ramadas\",\n      \"maidenName\": \"Nothing\",\n      \"middleName\": \"No middle name\",\n      \"name\": \"Amudha\",\n      \"namePrefix\": \"Miss\",\n      \"nameSuffix\": \"Das\",\n      \"nickName\": \"ammu\",\n      \"notes\": \"Just keep it simple\",\n      \"phoneticFirstName\": \"A\",\n      \"phoneticLastName\": \"B\",\n      \"phoneticMiddleName\": \"C\",\n      \"position\": \"Tester\",\n      \"sip\": \"abc\",\n      \"tagList\": [\n        \"Gym\"\n      ],\n      \"userMetadataList\": [\n        {\n          \"category\": \"PHONE\",\n          \"keyValueDataList\": [\n            {\n              \"key\": \"PHONENUMBER\",\n              \"val\": \"9845713516\"\n            }\n          ],\n          \"label\": \"Number\"\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/contacts/sync",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"contacts",
										"sync"
									]
								},
								"description": "Here we are testing with wrong category\n\nCategory value should be one of the following:\nPHONENUMBER, EMAIL, SOCIALPROFILE, ADDRESS, EVENT, WEBSITE, RELATIONSHIP, INSTANTMESSAGING, OTHER, NA"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Positive",
			"item": [
				{
					"name": "Positive : Update Image for Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f71ec5b-821b-4244-92ae-eb7d95f6edac",
								"exec": [
									"pm.test(\"Verify that the Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"    ",
									"});",
									"",
									"//Validating JSON data and schema",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [],",
									"  \"properties\": {",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"required\": [],",
									"      \"properties\": {",
									"        \"updatedConnectionIdList\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"string\"",
									"          }",
									"        }",
									"      }",
									"    },",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    }",
									"  }",
									"};",
									"var data = JSON.parse(responseBody);",
									"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "sessionToken",
								"value": "{{sessionToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contactImageList\": [\n    {\n      \"connectionId\": \"{{connectionId}}\",\n      \"imageURL\": \"https://wallpaperbrowse.com/media/images/soap-bubble-1958650_960_720.jpg\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseURL}}/v1.0/connection/api/image/update",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v1.0",
								"connection",
								"api",
								"image",
								"update"
							]
						},
						"description": "This API is used to upload images for contacts\n\nconnectionId - M\nimageURL - M"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update Image for Contacts",
			"item": [
				{
					"name": "Negative",
					"item": [
						{
							"name": "Negative : Update Image for Contacts (No imageurl)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f71ec5b-821b-4244-92ae-eb7d95f6edac",
										"exec": [
											"pm.test(\"Verify that the Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\",",
											"    \"statusCode\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactImageList\": [\n    {\n      \"connectionId\": \"{{connectionId}}\"\n      \n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/image/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"image",
										"update"
									]
								},
								"description": "This API is used to upload images for contacts\n\nconnectionId - M\nimageURL - M"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get User Profile Details",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get user profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "051fd0fa-1195-4089-8cb2-1dfbd40237e4",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"company\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"dateOfBirth\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"firstName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"gender\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"groupNameList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        },",
											"        \"imageURL\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"lastName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"maidenName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"middleName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"name\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"namePrefix\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"nameSuffix\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"nickName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"notes\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"phoneticFirstName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"phoneticLastName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"phoneticMiddleName\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"position\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"sip\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"tagList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        },",
											"        \"userMetadataList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"category\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"keyValueDataList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"object\",",
											"                  \"required\": [],",
											"                  \"properties\": {",
											"                    \"key\": {",
											"                      \"type\": \"string\"",
											"                    },",
											"                    \"val\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"label\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"verification\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"//Setting Valueid, Countrycode and Phone number",
											"postman.setEnvironmentVariable(\"valueId\", jsonData.data.userDetails.userMetadataList[0].valueId);",
											"postman.setEnvironmentVariable(\"countryCode\", jsonData.data.userDetails.userMetadataList[0].keyValueDataList[0].val);",
											"postman.setEnvironmentVariable(\"number\", jsonData.data.userDetails.userMetadataList[0].keyValueDataList[1].val);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/profile-details",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"profile-details"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b513c989-5425-4b1d-9b9d-801fcb955d46",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6ac6fad1-997f-4b66-8a00-a9a88407019d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get list of user Privacy profiles",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get list of user Privacy profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f4424c5-faed-4384-aa48-39b9ee74d32d",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"    ",
											"        \"userPrivacyProfileList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"privacyProfileId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"profileName\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"imageURL\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"isDefault\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPublic\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isSystem\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"valueIdList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"string\",",
											"                  \"required\": []",
											"                }",
											"              },",
											"              \"isCompanyShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPositionShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isTagShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isNameShared\": {",
											"                \"type\": \"boolean\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting Privacy Profile id",
											"postman.setEnvironmentVariable(\"privacyProfileId\", jsonData.data.userPrivacyProfileList[0].privacyProfileId);",
											"postman.setEnvironmentVariable(\"privacyProfileId2\", jsonData.data.userPrivacyProfileList[1].privacyProfileId);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/details",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "get list of user profiles ( 114)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"warning": ""
											},
											{
												"key": "sessionToken",
												"value": "{{sessionToken}}",
												"warning": ""
											}
										],
										"url": {
											"raw": "{{base-url}}v1.0/privacy-profile/api/details",
											"host": [
												"{{base-url}}v1",
												"0"
											],
											"path": [
												"privacy-profile",
												"api",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "cache-control",
											"value": "no-cache, no-store, max-age=0, must-revalidate",
											"name": "cache-control",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json;charset=UTF-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Wed, 19 Sep 2018 10:19:49 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "expires",
											"value": "0",
											"name": "expires",
											"description": ""
										},
										{
											"key": "pragma",
											"value": "no-cache",
											"name": "pragma",
											"description": ""
										},
										{
											"key": "transfer-encoding",
											"value": "chunked",
											"name": "transfer-encoding",
											"description": ""
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff",
											"name": "x-content-type-options",
											"description": ""
										},
										{
											"key": "x-frame-options",
											"value": "DENY",
											"name": "x-frame-options",
											"description": ""
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block",
											"name": "x-xss-protection",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"data\":{\"userPrivacyProfileList\":[{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d97\",\"profileName\":null,\"imageURL\":null,\"isDefault\":true,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d98\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"workPhone\"},{\"category\":\"emailAddress\",\"label\":\"workEmail\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"workEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"workPhone\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d99\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"},{\"category\":\"emailAddress\",\"label\":\"personalEmail\"},{\"category\":\"address\",\"label\":\"homeAddress\"},{\"category\":\"socialLink\",\"label\":\"twitter\"},{\"category\":\"socialLink\",\"label\":\"facebook\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"personalEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\"],\"address\":[\"homeAddress\"],\"socialLink\":[\"twitter\",\"facebook\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d9a\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"},{\"category\":\"phoneNumber\",\"label\":\"workPhone\"},{\"category\":\"emailAddress\",\"label\":\"personalEmail\"},{\"category\":\"emailAddress\",\"label\":\"workEmail\"},{\"category\":\"address\",\"label\":\"homeAddress\"},{\"category\":\"socialLink\",\"label\":\"twitter\"},{\"category\":\"socialLink\",\"label\":\"facebook\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"personalEmail\",\"workEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\",\"workPhone\"],\"address\":[\"homeAddress\"],\"socialLink\":[\"twitter\",\"facebook\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d9b\",\"profileName\":null,\"imageURL\":null,\"isDefault\":true,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"NA\":[\"name\"]}}]}}"
								},
								{
									"name": "get list of user profiles ( 114) Copy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "sessionToken",
												"value": "{{sessionToken}}"
											}
										],
										"url": {
											"raw": "{{base-url}}v1.0/privacy-profile/api/details",
											"host": [
												"{{base-url}}v1",
												"0"
											],
											"path": [
												"privacy-profile",
												"api",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=3EDED721C0B8E7066364B422E787E13E; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Nov 2018 18:31:51 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"userPrivacyProfileList\": [\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0070\",\n                \"profileName\": \"acquaintance\",\n                \"imageURL\": null,\n                \"isDefault\": true,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.852+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0071\",\n                \"profileName\": \"business\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedc0b5bb22162f35a15a4\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0072\",\n                \"profileName\": \"friends\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0073\",\n                \"profileName\": \"family\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\",\n                    \"5bdedc0b5bb22162f35a15a4\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0074\",\n                \"profileName\": \"public\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": true,\n                \"isSystem\": true,\n                \"valueIdList\": [],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1d74da20-35e7-451c-8436-a454d8b4f776",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e346315f-fd4c-4774-9799-827bbee75a7e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create Custom Profile",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Create custom profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "147a5534-ee31-432d-9936-f4209f328816",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"privacyProfileData\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"              \"privacyProfileId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"profileName\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"imageURL\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"isDefault\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPublic\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isSystem\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"valueIdList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"string\",",
											"                  \"required\": []",
											"                }",
											"              },",
											"              \"isCompanyShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPositionShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isTagShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isNameShared\": {",
											"                \"type\": \"boolean\"",
											"              }",
											"          }",
											"        },",
											"        \"userMetadataList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"category\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"keyValueDataList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"object\",",
											"                  \"required\": [],",
											"                  \"properties\": {",
											"                    \"key\": {",
											"                      \"type\": \"string\"",
											"                    },",
											"                    \"val\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"label\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"verification\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(jsonData, schema);",
											"postman.setEnvironmentVariable(\"privacyProfileId3\", jsonData.data.privacyProfileData.privacyProfileId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fdef2e50-3a42-475e-8c5b-876b653cbed8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"privacyProfileData\" :\n\t{\n\t\"profileName\" : \"customProfile_{{$randomInt}}\",\n\t\"imageURL\" : \"url\"\n\t},\n\t\"userMetadataList\" :\n\t[\n\t\t{  \n         \"label\":\"PL.00.01\",\n         \"keyValueDataList\":[  \n            {  \n               \"key\":\"countryCode\",\n               \"val\":\"+1\"\n            },\n            {  \n               \"key\":\"phoneNumber\",\n               \"val\":\"1234567890\"\n            }\n         ],\n         \"category\":\"PhoneNumber\"\n      }\n\t\t\n\t\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/create",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"create"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Edit User Privacy Profile",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Edit user privacy profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dbc93314-9b89-4a38-bfc1-ab9b67c7c715",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"privacyProfileData\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"              \"privacyProfileId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"profileName\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"imageURL\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"isDefault\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPublic\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isSystem\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"valueIdList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"string\",",
											"                  \"required\": []",
											"                }",
											"              },",
											"              \"isCompanyShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPositionShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isTagShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isNameShared\": {",
											"                \"type\": \"boolean\"",
											"              }",
											"          }",
											"        },",
											"        \"userMetadataList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"category\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"keyValueDataList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"object\",",
											"                  \"required\": [],",
											"                  \"properties\": {",
											"                    \"key\": {",
											"                      \"type\": \"string\"",
											"                    },",
											"                    \"val\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"label\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"verification\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ee2613-a9d8-4dcf-b9be-ac1115124d55",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"privacyProfileData\": {\n        \"privacyProfileId\": \"{{privacyProfileId3}}\",\n        \"profileName\": \"CustomProfile{{$randomInt}}\",\n        \"imageURL\": \"url\"\n    },\n    \"valueIdList\": [\n        \"5be14fab5bb2217f6280db0c\"\n    ],\n    \"userMetadataList\": [\n        {\n            \"label\": \"PL.00.02\",\n            \"keyValueDataList\": [\n                {\n                    \"key\": \"countryCode\",\n                    \"val\": \"+1\"\n                },\n                {\n                    \"key\": \"phoneNumber\",\n                    \"val\": \"8888888585\"\n                }\n            ],\n            \"category\": \"PhoneNumber\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/edit",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"edit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Set Default Privacy profile",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Set default privacy profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be1fb14c-6c22-4433-b465-3099de0a5ac8",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"profileId\": \"{{privacyProfileId2}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/default/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"default",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Send Connection Request",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Send Connection Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b27d1d6-a83b-4dae-96ed-e288c257f5f4",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema= {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"activityDetailsList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"activityId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"activityById\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"activityType\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"requestType\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"actionTaken\": {",
											"                    \"type\": \"string\"",
											"                  }",
											"                }",
											"              },",
											"              \"initiateDetails\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"initiateContactDetails\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [],",
											"                    \"properties\": {",
											"                      \"connectionId\": {",
											"                        \"type\": \"string\"",
											"                      },",
											"                      \"contactNumber\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [],",
											"                        \"properties\": {",
											"                          \"countryCode\": {",
											"                            \"type\": \"string\"",
											"                          },",
											"                          \"phoneNumber\": {",
											"                            \"type\": \"string\"",
											"                          }",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"activityMessage\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"activityStatus\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"createdOn\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"lastUpdatedOn\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that Schem is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Setting activity ID ",
											"var jsonData=JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"Activity_Accept\", jsonData.data.activityDetailsList[0].activityId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n\t\"initiateContactDetailsList\": [{\n\t\t\"connectionId\": \"{{connectionId}}\",\n\t\t\"contactNumber\": {\n\t\t\t\"countryCode\": \"{{Country_Code}}\",\n\t\t\t\"phoneNumber\": \"{{Pnumber}}\"\n\t\t}\n\t}],\n\t\"message\": \"Please accept my request, lets not miss getting connected\",\n\t\"sharedPrivacyProfileKey\": {\n\t\t\"isCompanyShared\": true,\n\t\t\"isPositionShared\": true,\n\t\t\"privacyProfileId\": \"{{privacyProfileId}}\"\n\t}\n}\n\n"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/connection-request/send",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"connection-request",
										"send"
									]
								},
								"description": "The API sends connection request to both registered and non-registered people users if connectionId or contact number is present in user's connection list"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Accept Connection",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Connect[AcceptConnection]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "34f3533f-8dff-4cbd-8b62-b704aa3086b6",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isExistingUser\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isPhoneNumberVerified\": {",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"isExistingUser\",",
											"        \"isPhoneNumberVerified\",",
											"        \"tempToken\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting temp session token",
											"postman.setEnvironmentVariable(\"tempTokenAC\", jsonData.data.tempToken);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de302752-d063-43b0-9c63-34ae0facdea9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "tempToken",
										"value": "{{tempToken1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"{{Pnumber}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/connect",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"connect"
									]
								}
							},
							"response": [
								{
									"name": "Connect_API_Positive",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"countryCode\":\"091\",\n\"phoneNo\":\"990099{{$randomInt}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{baseURL}}/v1.0/user/api/connect",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"v1.0",
												"user",
												"api",
												"connect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Sep 2018 12:08:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "people-backend-dev.ymedia.in",
											"path": "/",
											"secure": false,
											"value": "ADB604702B3C40584267BFA85AEDB9ED",
											"key": "JSESSIONID"
										}
									],
									"body": "{\"data\":{\"isExistingUser\":false,\"tempSessionToken\":\"5519b5a8-c81e-4b25-bc19-b9879a7a6d6d\",\"phoneNumberVerified\":false},\"message\":\"Otp sent successfully.\"}"
								}
							]
						},
						{
							"name": "Verify_OTP[Accept Connection]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25b1c399-b13c-46be-b410-48cdcbbd3353",
										"exec": [
											"",
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 2 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"    ",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"        \"data\": {",
											"            \"type\": \"object\",",
											"            \"properties\": {",
											"                \"isExistingUser\": { \"type\": \"boolean\" },",
											"                \"tempSessionToken\": { \"type\": [\"string\", \"null\"] },",
											"                \"sessionToken\": { \"type\": \"string\"},",
											"                \"phoneNumberVerified\": { \"type\": \"boolean\" },",
											"               \"message\": { \"type\": \"string\" },",
											"            }",
											"        }",
											"    }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Validates as JSON Response.",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"sessionTokenAC\", jsonData.data.sessionToken);//Setting temp session token",
											"",
											"console.log(\"sessionTokenAC\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tempToken",
										"value": "{{tempTokenAC}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "deviceTypeID",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"1111\",\n  \"referralCode\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/otp/verify",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"otp",
										"verify"
									]
								},
								"description": "Provided otp no will be checked against existing OTPs."
							},
							"response": []
						},
						{
							"name": "Get list of user Privacy profiles(Accept Connection)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b1c6a35-697c-4463-9143-d7b6ee5ebef3",
										"exec": [
											"",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"    ",
											"        \"userPrivacyProfileList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"privacyProfileId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"profileName\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"imageURL\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"isDefault\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPublic\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isSystem\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"valueIdList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"string\",",
											"                  \"required\": []",
											"                }",
											"              },",
											"              \"isCompanyShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isPositionShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isTagShared\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"isNameShared\": {",
											"                \"type\": \"boolean\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Setting Privacy Profile id",
											"postman.setEnvironmentVariable(\"privacyProfileIdAC\", jsonData.data.userPrivacyProfileList[0].privacyProfileId);",
											"",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionTokenAC}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/details",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "get list of user profiles ( 114)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"warning": ""
											},
											{
												"key": "sessionToken",
												"value": "{{sessionToken}}",
												"warning": ""
											}
										],
										"url": {
											"raw": "{{base-url}}v1.0/privacy-profile/api/details",
											"host": [
												"{{base-url}}v1",
												"0"
											],
											"path": [
												"privacy-profile",
												"api",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "cache-control",
											"value": "no-cache, no-store, max-age=0, must-revalidate",
											"name": "cache-control",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json;charset=UTF-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Wed, 19 Sep 2018 10:19:49 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "expires",
											"value": "0",
											"name": "expires",
											"description": ""
										},
										{
											"key": "pragma",
											"value": "no-cache",
											"name": "pragma",
											"description": ""
										},
										{
											"key": "transfer-encoding",
											"value": "chunked",
											"name": "transfer-encoding",
											"description": ""
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff",
											"name": "x-content-type-options",
											"description": ""
										},
										{
											"key": "x-frame-options",
											"value": "DENY",
											"name": "x-frame-options",
											"description": ""
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block",
											"name": "x-xss-protection",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"data\":{\"userPrivacyProfileList\":[{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d97\",\"profileName\":null,\"imageURL\":null,\"isDefault\":true,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d98\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"workPhone\"},{\"category\":\"emailAddress\",\"label\":\"workEmail\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"workEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"workPhone\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d99\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"},{\"category\":\"emailAddress\",\"label\":\"personalEmail\"},{\"category\":\"address\",\"label\":\"homeAddress\"},{\"category\":\"socialLink\",\"label\":\"twitter\"},{\"category\":\"socialLink\",\"label\":\"facebook\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"personalEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\"],\"address\":[\"homeAddress\"],\"socialLink\":[\"twitter\",\"facebook\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d9a\",\"profileName\":null,\"imageURL\":null,\"isDefault\":false,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"},{\"category\":\"phoneNumber\",\"label\":\"verifiedMobile\"},{\"category\":\"phoneNumber\",\"label\":\"workPhone\"},{\"category\":\"emailAddress\",\"label\":\"personalEmail\"},{\"category\":\"emailAddress\",\"label\":\"workEmail\"},{\"category\":\"address\",\"label\":\"homeAddress\"},{\"category\":\"socialLink\",\"label\":\"twitter\"},{\"category\":\"socialLink\",\"label\":\"facebook\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"emailAddress\":[\"personalEmail\",\"workEmail\"],\"NA\":[\"name\"],\"phoneNumber\":[\"verifiedMobile\",\"workPhone\"],\"address\":[\"homeAddress\"],\"socialLink\":[\"twitter\",\"facebook\"]}},{\"privacyProfileId\":\"5ba222c1d55e1c3e9fed4d9b\",\"profileName\":null,\"imageURL\":null,\"isDefault\":true,\"isPublic\":false,\"profileKeyList\":[{\"category\":\"NA\",\"label\":\"name\"}],\"tagList\":null,\"createdOn\":null,\"profileKeyMap\":{\"NA\":[\"name\"]}}]}}"
								},
								{
									"name": "get list of user profiles ( 114) Copy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "sessionToken",
												"value": "{{sessionToken}}"
											}
										],
										"url": {
											"raw": "{{base-url}}v1.0/privacy-profile/api/details",
											"host": [
												"{{base-url}}v1",
												"0"
											],
											"path": [
												"privacy-profile",
												"api",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=3EDED721C0B8E7066364B422E787E13E; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Nov 2018 18:31:51 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"userPrivacyProfileList\": [\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0070\",\n                \"profileName\": \"acquaintance\",\n                \"imageURL\": null,\n                \"isDefault\": true,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.852+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0071\",\n                \"profileName\": \"business\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedc0b5bb22162f35a15a4\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0072\",\n                \"profileName\": \"friends\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0073\",\n                \"profileName\": \"family\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": false,\n                \"isSystem\": true,\n                \"valueIdList\": [\n                    \"5bdedb2d5bb22162f35a159e\",\n                    \"5bdedc0b5bb22162f35a15a4\"\n                ],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            },\n            {\n                \"privacyProfileId\": \"5bdf3b175bb22113f71e0074\",\n                \"profileName\": \"public\",\n                \"imageURL\": null,\n                \"isDefault\": false,\n                \"isPublic\": true,\n                \"isSystem\": true,\n                \"valueIdList\": [],\n                \"isCompanyShared\": false,\n                \"isPositionShared\": false,\n                \"isTagShared\": false,\n                \"isNameShared\": true,\n                \"createdOn\": \"2018-11-04T18:31:51.853+0000\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Accept Connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "381f1487-8532-4ba8-98d4-6a75628e4019",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema= {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"contactData\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"connectionId\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"toUserId\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"connectionStatus\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"isBlocked\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"isFavourite\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"sharedPrivacyProfileWithContact\": {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"privacyProfileId\": {",
											"                  \"type\": \"string\"",
											"                }",
											"              },",
											"              \"required\": [",
											"                \"privacyProfileId\"",
											"              ]",
											"            },",
											"            \"sharedPrivacyProfileByContact\": {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"profileName\": {",
											"                  \"type\": \"string\"",
											"                }",
											"              },",
											"              \"required\": [",
											"                \"profileName\"",
											"              ]",
											"            },",
											"            \"sharedProfileData\": {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"name\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"userMetadataList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"object\",",
											"                      \"properties\": {",
											"                        \"valueId\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": [",
											"                            {",
											"                              \"type\": \"object\",",
											"                              \"properties\": {",
											"                                \"key\": {",
											"                                  \"type\": \"string\"",
											"                                },",
											"                                \"val\": {",
											"                                  \"type\": \"string\"",
											"                                }",
											"                              },",
											"                              \"required\": [",
											"                                \"key\",",
											"                                \"val\"",
											"                              ]",
											"                            },",
											"                            {",
											"                              \"type\": \"object\",",
											"                              \"properties\": {",
											"                                \"key\": {",
											"                                  \"type\": \"string\"",
											"                                },",
											"                                \"val\": {",
											"                                  \"type\": \"string\"",
											"                                }",
											"                              },",
											"                              \"required\": [",
											"                                \"key\",",
											"                                \"val\"",
											"                              ]",
											"                            }",
											"                          ]",
											"                        },",
											"                        \"isPrimary\": {",
											"                          \"type\": \"boolean\"",
											"                        }",
											"                      },",
											"                      \"required\": [",
											"                        \"valueId\",",
											"                        \"category\",",
											"                        \"label\",",
											"                        \"keyValueDataList\",",
											"                        \"isPrimary\"",
											"                      ]",
											"                    }",
											"                  ]",
											"                }",
											"              },",
											"              \"required\": [",
											"                \"name\",",
											"                \"userMetadataList\"",
											"              ]",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"connectionId\",",
											"            \"toUserId\",",
											"            \"connectionStatus\",",
											"            \"isBlocked\",",
											"            \"isFavourite\",",
											"            \"sharedPrivacyProfileWithContact\",",
											"            \"sharedPrivacyProfileByContact\",",
											"            \"sharedProfileData\"",
											"          ]",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"contactData\"",
											"      ]",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"data\",",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that Schem is Valid\"] = tv4.validate(data, schema);",
											"",
											"//Setting connection id",
											"",
											"var jsonData=JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"connectionIdAccept\", jsonData.data.contactData.connectionId);",
											"postman.setEnvironmentVariable(\"UserIdBlock\", jsonData.data.contactData.toUserId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionTokenAC}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activityId\": \"{{Activity_Accept}}\",\n  \"sharedPrivacyProfileKey\": {\n    \"isCompanyShared\": true,\n    \"isPositionShared\": true,\n    \"privacyProfileId\": \"{{privacyProfileIdAC}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/connection-request/accept",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"connection-request",
										"accept"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Connection list",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get Connection list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab571c4a-1bd3-4df7-9c47-2f7be50339fd",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Verify that the Response time is less than 20 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(20000);",
											"    ",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"contactList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"connectionId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"connectionStatus\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"groupIdList\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                  \"type\": \"string\"",
											"                }",
											"              },",
											"              \"isFavourite\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"previousStatus\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"publicProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"company\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"dateOfBirth\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"firstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"gender\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"groupNameList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"imageURL\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"maidenName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"middleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"namePrefix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nameSuffix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nickName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"notes\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticFirstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticLastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticMiddleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"position\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"sip\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"tagList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"userMetadataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"key\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"val\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"verification\": {",
											"                          \"type\": \"string\"",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"sharedProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"company\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"dateOfBirth\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"firstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"gender\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"groupNameList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"imageURL\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"maidenName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"middleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"namePrefix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nameSuffix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nickName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"notes\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticFirstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticLastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticMiddleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"position\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"sip\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"tagList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"userMetadataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"key\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"val\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"verification\": {",
											"                          \"type\": \"string\"",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"staticProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"company\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"dateOfBirth\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"firstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"gender\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"groupNameList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"imageURL\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"maidenName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"middleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"namePrefix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nameSuffix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nickName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"notes\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticFirstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticLastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticMiddleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"position\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"sip\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"tagList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"userMetadataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"key\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"val\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"verification\": {",
											"                          \"type\": \"string\"",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"toUserId\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);",
											"",
											"var jsonData=JSON.parse(responseBody)",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "lastSyncedTime",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/user-connection-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"user-connection-list"
									]
								},
								"description": "This API is used to Lists user connections including static contacts for a user"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Request for more info",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Request for more info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "edd2fac6-4fd3-431d-874a-7dc35575c9f1",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connectionId\": \"{{connectionId}}\",\n  \"message\": \"Please provide me the Email and facebook id and twitter Please provide me the Email and facebook id and twitter\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/more-info/request",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"more-info",
										"request"
									]
								},
								"description": "People user can request other users of their real time connection for more profile info\nconnection id of connected user, fetched from Get connection list"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Request for more info(Exceeding chars count)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea0eb740-b84f-4376-b749-6a1c9645a953",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connectionId\": \"{{connectionId}}\",\n  \"message\": \"Please provide me the Email and facebook id and twitter Please provide me the Email and facebook id and twitterPlease provide me the Email and facebook id and twitterPlease provide me the Email and facebook id and twitterPlease provide me the Email and facebook id and twitterPlease provide me the Email and facebook id and twitter\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/more-info/request",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"more-info",
										"request"
									]
								},
								"description": "People user can request other users of their real time connection for more profile info\nconnection id of connected user, fetched from Get connection list\n\nCharacters more than 300"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37a6b39e-b3d6-4873-b489-0eced555dce6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac255211-8e05-4633-9417-8962de82b3b5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Report Contact",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Report Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05274179-640e-48dc-9413-00c58c054b3a",
										"exec": [
											"pm.test(\"Verify that Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that Response time is less than 2S\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {}",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionTokenAC}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reportMessage\": \"Reporting\",\n  \"userId\": \"{{UserIdBlock}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/report",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"report"
									]
								},
								"description": "This API is used to Report a Contact"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Negative: Report Contact (Invalid session)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05274179-640e-48dc-9413-00c58c054b3a",
										"exec": [
											"pm.test(\"Verify that Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Verify that Response time is less than 2S\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											" };",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "123"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reportMessage\": \"Reporting\",\n  \"userId\": \"{{UserIdBlock}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/report",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"report"
									]
								},
								"description": "This API is used to Report a Contact"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Block/Unblock Contact",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Block Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e771c85-12cb-4e4a-a6ea-7354166a7054",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionTokenAC}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isBlocked\": true,\n  \"userId\": \"{{UserIdBlock}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/block-status/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"block-status",
										"update"
									]
								},
								"description": "This API is used to Block the Contacts"
							},
							"response": []
						},
						{
							"name": "Positive: UnBlock Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec185cf6-2abd-4ec0-893d-b029b9187cd7",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"}",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionTokenAC}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isBlocked\": false,\n  \"userId\": \"{{UserIdBlock}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/block-status/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"block-status",
										"update"
									]
								},
								"description": "This API is used to UnBlock the Contacts"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add/Edit Static Contact",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Add Static Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "689644e7-aca9-42a7-baaf-71bc6b07443e",
										"exec": [
											"pm.test(\"Verify that Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that Response time is less than 2S\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that schema is Valid\"] = tv4.validate(data, schema);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactStaticDataList\": [\n    {\n      \"connectionId\": \"{{connectionId}}\",\n      \"staticProfileData\": {\n        \"company\": \"YML\",\n        \"contactId\": \"string\",\n        \"contactNumber\": {\n          \"countryCode\": \"+1\",\n          \"phoneNumber\": \"7899650230\"\n        },\n        \"firstName\": \"Ram\",\n        \"gender\": \"string\",\n        \"groupNameList\": [\n          \"string\"\n        ],\n        \"imageURL\": \"https://cdn.pixabay.com/photo/2017/01/06/19/18/soap-bubble-1958666_960_720.jpg\",\n        \"lastName\": \"awe\",\n        \"maidenName\": \"string\",\n        \"middleName\": \"string\",\n        \"name\": \"string\",\n        \"namePrefix\": \"string\",\n        \"nameSuffix\": \"string\",\n        \"nickName\": \"string\",\n        \"notes\": \"string\",\n        \"phoneticFirstName\": \"string\",\n        \"phoneticLastName\": \"string\",\n        \"phoneticMiddleName\": \"string\",\n        \"position\": \"string\",\n        \"sip\": \"string\",\n        \"tagList\": [\n          \"string\"\n        ],\n        \"userId\": \"string\",\n        \"userMetadataList\": [\n          {\n            \"category\": \"EMAIL\",\n            \"isPrimary\": true,\n            \"keyValueDataList\": [\n              {\n                \"key\": \"Email\",\n                \"val\": \"7899364019@gmail.com\"\n              }\n            ],\n            \"label\": \"training\",\n            \"valueId\": \"string\",\n            \"verification\": \"VERIFIED\"\n          }\n        ]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/static-data/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"static-data",
										"update"
									]
								},
								"description": "This API is used to add static data of contact"
							},
							"response": []
						},
						{
							"name": "Positive: Edit Static Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "130f0058-b9ed-4921-a4be-33e245744ae4",
										"exec": [
											"pm.test(\"Verify that Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that Response time is less than 2S\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"contactList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactStaticDataList\": [\n    {\n      \"connectionId\": \"{{connectionId}}\",\n      \"staticProfileData\": {\n        \"company\": \"YML Y Media Labs\",\n        \"contactId\": \"string\",\n        \"contactNumber\": {\n          \"countryCode\": \"+1\",\n          \"phoneNumber\": \"7899650230\"\n        },\n        \"firstName\": \"Ram\",\n        \"gender\": \"string\",\n        \"groupNameList\": [\n          \"string\"\n        ],\n        \"imageURL\": \"https://cdn.pixabay.com/photo/2017/01/06/19/18/soap-bubble-1958666_960_720.jpg\",\n        \"lastName\": \"awe\",\n        \"maidenName\": \"string\",\n        \"middleName\": \"string\",\n        \"name\": \"string\",\n        \"namePrefix\": \"string\",\n        \"nameSuffix\": \"string\",\n        \"nickName\": \"string\",\n        \"notes\": \"string\",\n        \"phoneticFirstName\": \"string\",\n        \"phoneticLastName\": \"string\",\n        \"phoneticMiddleName\": \"string\",\n        \"position\": \"string\",\n        \"sip\": \"string\",\n        \"tagList\": [\n          \"string\"\n        ],\n        \"userId\": \"string\",\n        \"userMetadataList\": [\n          {\n            \"category\": \"EMAIL\",\n            \"isPrimary\": true,\n            \"keyValueDataList\": [\n              {\n                \"key\": \"Email\",\n                \"val\": \"7899364019@gmail.com\"\n              }\n            ],\n            \"label\": \"training\",\n            \"valueId\": \"string\",\n            \"verification\": \"VERIFIED\"\n          }\n        ]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/static-data/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"static-data",
										"update"
									]
								},
								"description": "This API is used to edit static data of contact"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Push notification",
			"item": [
				{
					"name": "Negative",
					"item": [
						{
							"name": "Update Push notification setting Negative Incorrect device token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b48cc881-fd84-4215-81f5-533b77c52b91",
										"type": "text/javascript",
										"exec": [
											"",
											"",
											"//Response code validation",
											"tests[\"Status code is 500\"] = responseCode.code === 500;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceToken\": \"\",\n  \"deviceTypeId\": 1,\n  \"enableSetting\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/push-notification-setting/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"push-notification-setting",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Push notification setting disabled",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ff3f946-b624-40fb-84b8-bda04a259abf",
										"type": "text/javascript",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"              \"properties\": {              ",
											"                ",
											"                \"isPushNotificationEnabled\": { \"type\": \"boolean\" },",
											"             }, ",
											"             \"message\": { \"type\": \"string\" }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceToken\": \"doCAYO5ohp8:APA91bFGGCpaF8J2RwacWHYcQ2N5oKCa8HBp_YBgurLwyWcuoPJEobeoYHDp8AjrYd1Elx26ZGOjOnWNn3raj4yScPMvPNLJ373XV3yTyXmGmxIduKf55-Rk99du25NhrfozvDS-XvsS\",\n  \"deviceTypeId\": 2,\n  \"enableSetting\": false\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/push-notification-setting/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"push-notification-setting",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Update Push notification setting Android",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8beb4672-6e8d-4065-b90f-74c84c6aa2af",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"              \"properties\": {              ",
											"                \"message\": { \"type\": \"string\" },",
											"                \"isPushNotificationEnabled\": { \"type\": \"boolean\" },",
											"             }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceToken\": \"doCAYO5ohp8:APA91bFGGCpaF8J2RwacWHYcQ2N5oKCa8HBp_YBgurLwyWcuoPJEobeoYHDp8AjrYd1Elx26ZGOjOnWNn3raj4yScPMvPNLJ373XV3yTyXmGmxIduKf55-Rk99du25NhrfozvDS-XvsS\",\n  \"deviceTypeId\":1,\n  \"enableSetting\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/push-notification-setting/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"push-notification-setting",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Push notification setting iOS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d12e3fae-2f91-44c6-9e56-293666e1e7c1",
										"type": "text/javascript",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"              \"properties\": {              ",
											"                ",
											"                \"isPushNotificationEnabled\": { \"type\": \"boolean\" },",
											"             }, ",
											"             \"message\": { \"type\": \"string\" }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceToken\": \"EE61835F25DCA5D8387BF3123FB73D3B7C18141951BEC21252C8F3A32F54F792\",\n  \"deviceTypeId\": 1,\n  \"enableSetting\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/push-notification-setting/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"push-notification-setting",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get All Tags",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get list of tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ee7424b-25e8-431b-88c5-ef29c6728864",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema= ",
											"{",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"tagList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/tags/api/suggested-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"tags",
										"api",
										"suggested-list"
									]
								},
								"description": "It will prepare a list of suggested tags by combining system tags and user created tags."
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be0e13a5-47aa-40a1-bf6e-8579e9608889",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "26d9f975-37e7-4dfa-8bae-9acfbe5bb6d9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get list of tags Negative Invalid SessionToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "762b4ab0-448f-4860-9a18-c38e26a5baaa",
										"type": "text/javascript",
										"exec": [
											"",
											"",
											"//Response code validation",
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apiToken",
										"value": "1234"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/tags/api/list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"tags",
										"api",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Predefined Network Categories list",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get Predefined Network Category list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/predefined-data/api/network-categories",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"predefined-data",
										"api",
										"network-categories"
									]
								},
								"description": "Get pre defined network categories"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Predefined System Data",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get pre defined data for app",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2fc3a63-fc68-465a-94f3-96bfe7d79853",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema= {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
											"  \"$id\": \"http://example.com/root.json\",",
											"  \"type\": \"object\",",
											"  \"title\": \"The Root Schema\",",
											"  \"required\": [",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"title\": \"The Data Schema\",",
											"      \"required\": [",
											"        \"labels\",",
											"        \"networkCategories\",",
											"        \"tagList\"",
											"      ],",
											"      \"properties\": {",
											"        \"labels\": {",
											"          \"$id\": \"#/properties/data/properties/labels\",",
											"          \"type\": \"array\",",
											"          \"title\": \"The Labels Schema\",",
											"          \"items\": {",
											"            \"$id\": \"#/properties/data/properties/labels/items\",",
											"            \"type\": \"object\",",
											"            \"title\": \"The Items Schema\",",
											"            \"required\": [",
											"              \"category\",",
											"              \"keyNameList\"",
											"            ],",
											"            \"properties\": {",
											"              \"category\": {",
											"                \"$id\": \"#/properties/data/properties/labels/items/properties/category\",",
											"                \"type\": \"string\",",
											"                \"title\": \"The Category Schema\",",
											"                \"default\": \"\",",
											"                \"examples\": [",
											"                  \"PHONENUMBER\"",
											"                ],",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"labelList\": {",
											"                \"$id\": \"#/properties/data/properties/labels/items/properties/labelList\",",
											"                \"type\": \"array\",",
											"                \"title\": \"The Labellist Schema\",",
											"                \"items\": {",
											"                  \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items\",",
											"                  \"type\": \"object\",",
											"                  \"title\": \"The Items Schema\",",
											"                ",
											"                  \"properties\": {",
											"                    \"key\": {",
											"                      \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/key\",",
											"                      \"type\": \"string\",",
											"                      \"title\": \"The Key Schema\",",
											"                      \"default\": \"\",",
											"                      \"examples\": [",
											"                        \"PL.00.00\"",
											"                      ],",
											"                      \"pattern\": \"^(.*)$\"",
											"                    },",
											"                    \"val\": {",
											"                      \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/val\",",
											"                      \"type\": \"string\",",
											"                      \"title\": \"The Val Schema\",",
											"                      \"default\": \"\",",
											"                      \"examples\": [",
											"                        \"Mobile\"",
											"                      ],",
											"                      \"pattern\": \"^(.*)$\"",
											"                    },",
											"                    \"ios\": {",
											"                      \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/ios\",",
											"                      \"type\": \"array\",",
											"                      \"title\": \"The Ios Schema\",",
											"                      \"items\": {",
											"                        \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/ios/items\",",
											"                        \"type\": \"string\",",
											"                        \"title\": \"The Items Schema\",",
											"                        \"default\": \"\",",
											"                        \"examples\": [",
											"                          \"mobile\"",
											"                        ],",
											"                        \"pattern\": \"^(.*)$\"",
											"                      }",
											"                    },",
											"                    \"android\": {",
											"                      \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/android\",",
											"                      \"type\": \"array\",",
											"                      \"title\": \"The Android Schema\",",
											"                      \"items\": {",
											"                        \"$id\": \"#/properties/data/properties/labels/items/properties/labelList/items/properties/android/items\",",
											"                        \"type\": \"string\",",
											"                        \"title\": \"The Items Schema\",",
											"                        \"default\": \"\",",
											"                        \"examples\": [",
											"                          \"Mobile\"",
											"                        ],",
											"                        \"pattern\": \"^(.*)$\"",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              },",
											"              \"keyNameList\": {",
											"                \"$id\": \"#/properties/data/properties/labels/items/properties/keyNameList\",",
											"                \"type\": \"array\",",
											"                \"title\": \"The Keynamelist Schema\",",
											"                \"items\": {",
											"                  \"$id\": \"#/properties/data/properties/labels/items/properties/keyNameList/items\",",
											"                  \"type\": \"string\",",
											"                  \"title\": \"The Items Schema\",",
											"                  \"default\": \"\",",
											"                  \"examples\": [",
											"                    \"countryCode\",",
											"                    \"phoneNumber\"",
											"                  ],",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            }",
											"          }",
											"        },",
											"        \"networkCategories\": {",
											"          \"$id\": \"#/properties/data/properties/networkCategories\",",
											"          \"type\": \"array\",",
											"          \"title\": \"The Networkcategories Schema\",",
											"          \"items\": {",
											"            \"$id\": \"#/properties/data/properties/networkCategories/items\",",
											"            \"type\": \"object\",",
											"            \"title\": \"The Items Schema\",",
											"            \"required\": [",
											"              \"name\",",
											"              \"imageURL\",",
											"              \"description\"",
											"            ],",
											"            \"properties\": {",
											"              \"name\": {",
											"                \"$id\": \"#/properties/data/properties/networkCategories/items/properties/name\",",
											"                \"type\": \"string\",",
											"                \"title\": \"The Name Schema\",",
											"                \"default\": \"\",",
											"                \"examples\": [",
											"                  \"Sports\"",
											"                ],",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"imageURL\": {",
											"                \"$id\": \"#/properties/data/properties/networkCategories/items/properties/imageURL\",",
											"                \"type\": \"string\",",
											"                \"title\": \"The Imageurl Schema\",",
											"                \"default\": \"\",",
											"                \"examples\": [",
											"                  \"https://s3-us-west-2.amazonaws.com/people-network-category-dev/1533560457335177755577615264160.jpg\"",
											"                ],",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"description\": {",
											"                \"$id\": \"#/properties/data/properties/networkCategories/items/properties/description\",",
											"                \"type\": \"null\",",
											"                \"title\": \"The Description Schema\",",
											"                \"default\": null,",
											"                \"examples\": [",
											"                  null",
											"                ]",
											"              }",
											"            }",
											"          }",
											"        },",
											"        \"tagList\": {",
											"          \"$id\": \"#/properties/data/properties/tagList\",",
											"          \"type\": \"array\",",
											"          \"title\": \"The Taglist Schema\",",
											"          \"items\": {",
											"            \"$id\": \"#/properties/data/properties/tagList/items\",",
											"            \"type\": \"string\",",
											"            \"title\": \"The Items Schema\",",
											"            \"default\": \"\",",
											"            \"examples\": [",
											"              \"gamer\",",
											"              \"fun lover\",",
											"              \"writer\",",
											"              \"IT\",",
											"              \"nice\",",
											"              \"badDriver\",",
											"              \"actor\",",
											"              \"doctor\",",
											"              \"designer\",",
											"              \"engineer\"",
											"            ],",
											"            \"pattern\": \"^(.*)$\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"//Validating JSON data and schema",
											"var schema= {};",
											"var data = JSON.parse(responseBody);",
											"var result = tv4.validateResult(jsonData, schema);",
											"tests[\"API Response is valid(against schema)\"] = tv4.validate(jsonData, schema);",
											"",
											"if (!result.valid) {",
											"tests[\"Invalid Schema: \" + result.error + \" at \" + result.error.dataPath + \" (\" + result.error.schemaPath + \")\"] = result.valid;",
											"}",
											"else {",
											"tests[\"Valid Schema\"] = result.valid;",
											"}",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/predefined-data/api/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"predefined-data",
										"api",
										""
									]
								},
								"description": "Get pre defined label mapping for app"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Change Primary Phone Number",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Change Primary Phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81ba4e4c-0543-4025-975d-a2e50ed76569",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"tempToken\": {",
											"          \"type\": \"string\"",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newContactNumber\": {\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"7899364055\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/primary-number/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"primary-number",
										"update"
									]
								},
								"description": "This API is used when user wishes to change the primary number\ncountryCode - M\nphoneNumber - M"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "310ba49e-0ccb-4fc1-b4d4-08aababc77fe",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a85270a6-e076-4cce-84cf-369ab34ca165",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Find user by Phone number",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Find user by Phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e399482c-bed6-4a76-8895-8bd7202632e0",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema= {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"publicProfileData\": {",
											"          \"type\": \"object\",",
											"          \"required\": [],",
											"          \"properties\": {",
											"            \"userId\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"name\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"countryCode\": \"+1\",\n    \"phoneNumber\": \"{{Pnumber}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/searchByNumber",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"searchByNumber"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User Group Related Operations",
			"item": [
				{
					"name": "Add Groups",
					"item": [
						{
							"name": "Add_groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ed639a7-e818-4233-9e57-195337b9056e",
										"type": "text/javascript",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 4000ms\"] = responseTime < 4000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"userGroupList\": {",
											"          \"type\": \"array\",",
											"          \"items\": [",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": {}",
											"                }",
											"              }",
											"            }",
											"          ]",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											"var jsonData = JSON.parse(responseBody);//Validates as JSON Response.",
											"postman.setEnvironmentVariable(\"groupId\", jsonData.data.userGroupList[0].groupId);",
											"console.log(\"groupId\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userGroupList\": [\n    {\n      \"contactIdList\": [\n        \"{{connectionId}}\"\n      ],\n      \"desc\": \"Workout134\",\n      \"imageURL\": \"www.images.com/gym\",\n      \"orderNumber\": 0,\n      \"title\": \"We Fitness21{{$randomInt}}\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/add",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_groups Negative Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7be99f06-0177-40f9-bacd-2387877b77bf",
										"type": "text/javascript",
										"exec": [
											"",
											"",
											"//Response code validation",
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"value": "1234"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userGroupList\": [\n    {\n      \"contactIdList\": [\n        \"{{connectionId}}\"\n      ],\n      \"desc\": \"Workout\",\n      \"imageURL\": \"www.images.com/gym\",\n      \"orderNumber\": 0,\n      \"title\": \"We Fitness\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/add",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"add"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Fetch User Groups",
					"item": [
						{
							"name": "Fetch User Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9571fa02-6d2f-40a8-a2e1-4ae411634a66",
										"type": "text/javascript",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 4000ms\"] = responseTime < 4000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"userGroupList\": {",
											"          \"type\": \"array\",",
											"          \"items\": [",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": {}",
											"                }",
											"              }",
											"            },",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  ]",
											"                }",
											"              }",
											"            },",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  ]",
											"                }",
											"              }",
											"            },",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  ]",
											"                }",
											"              }",
											"            },",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  ]",
											"                }",
											"              }",
											"            },",
											"            {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"groupId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"ownerId\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"title\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"desc\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"imageURL\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"orderNumber\": {",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"isFavourite\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"contactIdList\": {",
											"                  \"type\": \"array\",",
											"                  \"items\": [",
											"                    {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  ]",
											"                }",
											"              }",
											"            }",
											"          ]",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/details",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"details"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch User Groups Negative Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d95b115b-bb5a-464c-96f6-962e0f306745",
										"type": "text/javascript",
										"exec": [
											"//Response code validation",
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sessionToken",
										"value": "1234"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/details",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"details"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Mark Favourite/Unfavourite Group",
					"item": [
						{
							"name": "Mark Group Favourite",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83dee852-8645-4712-ad73-84aa02314110",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"                \"message\": { \"type\": \"string\" },",
											"                ",
											"    }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"favouriteGroups\": [\n    {\n      \"groupId\": \"{{groupId}}\",\n      \"isFavourite\": true\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/update-favourite",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"update-favourite"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark Group UnFavourite",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60306768-d0a6-4fff-aeac-6c5201ea357a",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"                \"message\": { \"type\": \"string\" },",
											"                ",
											"    }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"favouriteGroups\": [\n    {\n      \"groupId\": \"{{groupId}}\",\n      \"isFavourite\": false\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/update-favourite",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"update-favourite"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark Group Favourite/UnFavourite Negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e99f67e7-ac86-4857-9a34-e3dc84fd5290",
										"type": "text/javascript",
										"exec": [
											"",
											"//Response code validation",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupId\": \"123\",\n  \"isFavourite\": false\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/update-favourite",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"update-favourite"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b8adc27-7ae4-4d3c-9960-a5b926f9580d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0e8845ae-a0b0-4e98-aea9-74f11521506d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Favourite Groups",
					"item": [
						{
							"name": "Get_favourite_groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c990debb-290f-4c09-a357-ea440b639804",
										"type": "text/javascript",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"userGroupList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {}",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/favourites",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"favourites"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_favourite_groups Negative Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5010245-6ecc-4e7e-8c61-623024c41ff6",
										"type": "text/javascript",
										"exec": [
											"",
											"",
											"//Response code validation",
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sessionToken",
										"value": "1234"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/favourites",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"favourites"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit User Group",
					"item": [
						{
							"name": "Edit User Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03bb5395-7968-4b58-921a-f59ad44a67e2",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 4000ms\"] = responseTime < 4000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"    \"type\": \"object\",",
											"            \"properties\": {",
											"                \"message\": { \"type\": \"string\" },",
											"                ",
											"            }",
											"        ",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userGroupsToBeEdited\": [\n        {\n            \"desc\": \"This is the group fitness\",\n            \"groupId\": \"{{groupId}}\",\n            \"imageURL\": \"www.images.com/gym\",\n            \"localId\": \"string\",\n            \"title\": \"Fitns{{$randomInt}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/edit",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"edit"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit User Group Negative Invalid GroupId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f484321b-fd66-4b01-8fd6-2419d9a136f6",
										"type": "text/javascript",
										"exec": [
											"",
											"//Response code validation",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"desc\": \"This is the group fitness\",\n  \"groupId\": \"123\",\n  \"imageURL\": \"www.images.com/gym\",\n  \"title\": \"Fitns\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/group/api/edit",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"group",
										"api",
										"edit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1f031614-a618-4e80-97bb-c6872cdd884f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c717b9bc-99b9-4240-bd2a-b30321940eb3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Received Activity list",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get user received activities list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5ed583a-01c7-4acb-8322-0310b564a790",
										"exec": [
											"pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that the Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"",
											"//Validating JSON data and schema",
											"var schema= {",
											"",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"userActivityList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"activityDetails\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"activityId\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"activityById\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"activityForId\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"activityType\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [],",
											"                    \"properties\": {",
											"                      \"requestType\": {",
											"                        \"type\": \"string\"",
											"                      },",
											"                      \"actionTaken\": {",
											"                        \"type\": \"string\"",
											"                      }",
											"                    }",
											"                  },",
											"                  \"initiateDetails\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [],",
											"                    \"properties\": {",
											"                      \"initiateContactDetails\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [],",
											"                        \"properties\": {",
											"                          \"connectionId\": {",
											"                            \"type\": \"string\"",
											"                          },",
											"                          \"contactNumber\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"countryCode\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"phoneNumber\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        }",
											"                      }",
											"                    }",
											"                  },",
											"                  \"activityMessage\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"activityStatus\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"createdOn\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastUpdatedOn\": {",
											"                    \"type\": \"string\"",
											"                  }",
											"                }",
											"              },",
											"              \"publicProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"userId\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  }",
											"                }",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schem is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionTokenAC}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/v1.0/activity/api/activities",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"activity",
										"api",
										"activities"
									]
								},
								"description": "API gets all the activities created for the user"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add tags to contact ",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Add tags to contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "102d1535-5620-4501-8ac6-6b0c2f428830",
										"exec": [
											"pm.test(\"Verify that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"userContactList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {",
											"              \"connectionId\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"connectionStatus\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"staticProfileData\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"name\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"firstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"middleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"lastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticFirstName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticMiddleName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"phoneticLastName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"namePrefix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nameSuffix\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"nickName\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"gender\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"dateOfBirth\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"company\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"position\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"imageURL\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"notes\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"tagList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"string\"",
											"                    }",
											"                  },",
											"                  \"userMetadataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"category\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"label\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"keyValueDataList\": {",
											"                          \"type\": \"array\",",
											"                          \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"required\": [],",
											"                            \"properties\": {",
											"                              \"key\": {",
											"                                \"type\": \"string\"",
											"                              },",
											"                              \"val\": {",
											"                                \"type\": \"string\"",
											"                              }",
											"                            }",
											"                          }",
											"                        }",
											"                      }",
											"                    }",
											"                  }",
											"                }",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Verify that the Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userContactList\": [\n    {\n      \"firstName\": \"bhaskar\",\n      \"lastName\": \"sengupta\",\n      \"phoneticFirstName\": \"bhaskar\",\n      \"gender\": \"male\",\n      \"userMetadataList\": [\n        {\n          \"label\": \"work\",\n          \"keyValueDataList\": [\n            {\n              \"key\": \"countryCode\",\n              \"val\": \"+91\"\n            },\n            {\n              \"key\": \"phoneNumber\",\n              \"val\": \"9845713517\"\n            }\n          ],\n          \"category\": \"PhoneNumber\"\n        }\n      ],\n      \"tagList\": [\n        \"artist\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/contacts/sync",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"contacts",
										"sync"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Add tags to contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "102d1535-5620-4501-8ac6-6b0c2f428830",
										"exec": [
											"pm.test(\"Verify that status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											" var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "fasjdgfdsgjsdgdgd",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userContactList\": [\n    {\n      \"firstName\": \"bhaskar\",\n      \"lastName\": \"sengupta\",\n      \"phoneticFirstName\": \"bhaskar\",\n      \"gender\": \"male\",\n      \"userMetadataList\": [\n        {\n          \"label\": \"work\",\n          \"keyValueDataList\": [\n            {\n              \"key\": \"countryCode\",\n              \"val\": \"+91\"\n            },\n            {\n              \"key\": \"phoneNumber\",\n              \"val\": \"9845713517\"\n            }\n          ],\n          \"category\": \"PhoneNumber\"\n        }\n      ],\n      \"tagList\": [\n        \"artist\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/contacts/sync",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"contacts",
										"sync"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba1e1d48-67f9-40e6-aed7-9fd8d1d9d4e1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "30a31465-e7e7-4862-9bd4-5e7cea972e11",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Edit contacts and add tags",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Edit Contact and add tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e2bc17f-8d17-4daf-b992-a033f59cfa23",
										"exec": [
											"pm.test(\"Verify that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"contactStaticDataList\":[  \n      {  \n         \"connectionId\":\"{{connectionId}}\",\n         \"staticProfileData\":{  \n            \"tagList\":[  \n               \"artist\",\n               \"designer\"\n            ]\n         }\n      }\n   ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/static-data/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"static-data",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Edit Contact and add tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e2bc17f-8d17-4daf-b992-a033f59cfa23",
										"exec": [
											"pm.test(\"Verify that status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											" var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "fhdhdfhdhh3t4trg"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"contactStaticDataList\":[  \n      {  \n         \"connectionId\":\"{{connectionId}}\",\n         \"staticProfileData\":{  \n            \"tagList\":[  \n               \"artist\",\n               \"designer\"\n            ]\n         }\n      }\n   ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/static-data/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"static-data",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update Tags To user profile",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Update Tags To user profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d81f0d7-89d0-4922-89d2-795e49b5f3f5",
										"exec": [
											"pm.test(\"Verify that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema =",
											"{",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"userDetails\": {",
											"          \"type\": \"object\",",
											"          \"required\": [],",
											"          \"properties\": {",
											"            \"userId\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"name\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"tagList\": {",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"type\": \"string\"",
											"              }",
											"            },",
											"            \"userMetadataList\": {",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {",
											"                  \"valueId\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"category\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"label\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"keyValueDataList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                      \"type\": \"object\",",
											"                      \"required\": [],",
											"                      \"properties\": {",
											"                        \"key\": {",
											"                          \"type\": \"string\"",
											"                        },",
											"                        \"val\": {",
											"                          \"type\": \"string\"",
											"                        }",
											"                      }",
											"                    }",
											"                  },",
											"                  \"verification\": {",
											"                    \"type\": \"string\"",
											"                  },",
											"                  \"isPrimary\": {",
											"                    \"type\": \"boolean\"",
											"                  }",
											"                }",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"userDetails\": {\n\"tagList\": [\n\"artist\"\n]\n}\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/profile/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"profile",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "16fce5a6-04fa-40c5-aec6-dc0ffb55b524",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "131cadc7-c18b-4af2-9d10-405860b6435a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Update Tags To user profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d81f0d7-89d0-4922-89d2-795e49b5f3f5",
										"exec": [
											"pm.test(\"Verify that status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											" var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"type": "text",
										"value": "133tegsfgg"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"userDetails\": {\n\"tagList\": [\n\"artist\"\n]\n}\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/profile/update",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"profile",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete Contact",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Delete Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50a2f22d-5d42-4951-8c83-f5cc5a42cb9a",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"        \"deletedConnectionIdList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connectionIdList\": [\n    \"{{connectionId}}\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/connection/api/delete",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"connection",
										"api",
										"delete"
									]
								},
								"description": "This API will delete Contact"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3dc33568-8236-4511-963c-5bd3437a5e29",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bd52ef7e-a41d-4ec3-9649-069e6a04f3e4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete Privacy Profile",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Delete privacy profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20eb3b14-2b34-4005-bfd9-fd0168540489",
										"exec": [
											"pm.test(\"Verify that the Response time is less than 3 Seconds\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);",
											"    ",
											"});pm.test(\"Verify that the Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"required\": [],",
											"      \"properties\": {",
											"     ",
											"        \"deletedprofilesList\": {",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      }",
											"      ",
											"    }",
											"  }",
											" ",
											"};",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(jsonData, schema);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"profileIdList\" : [\"{{privacyProfileId3}}\"]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/privacy-profile/api/delete",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"privacy-profile",
										"api",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Link Primary Email",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Link Primary Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f78033a-22c8-4e68-a3ad-671ed1054e43",
										"exec": [
											"pm.test(\"Verify that Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 2Seconds\", function() {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"emailId\" : \"amudha.r1@ymedialabs.com\"\n}\n\n"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/primary-email/link",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"primary-email",
										"link"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Link Primary Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f78033a-22c8-4e68-a3ad-671ed1054e43",
										"exec": [
											"pm.test(\"Verify that status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"",
											"pm.test(\"Verify that Response time is less than 2s\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"var schema ={",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"message\"",
											"  ]",
											"};",
											" var data = JSON.parse(responseBody);",
											"",
											"tests[\"Verify that Schema is Valid\"] = tv4.validate(data, schema);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"value": "{{sessionToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"emailId\" : \"amudha.1ymedialabs.com\"\n}\n\n"
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/user/api/primary-email/link",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"user",
										"api",
										"primary-email",
										"link"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "A registered user should able to link an email account with his WATU account.\nThis email is added as personal email.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Positive: Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9b0287d-419d-478f-8398-0a2511f6a120",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//Validating JSON data and schema",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [],",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"type": "text",
										"value": "{{sessionToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/account/api/logout",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"account",
										"api",
										"logout"
									]
								},
								"description": "This API is used to signout the user\nThe Session token will be no longer valid, once the user logs out"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Negative: Logout (Invalid SessionToken)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9b0287d-419d-478f-8398-0a2511f6a120",
										"exec": [
											"//Response time validation",
											"tests[\"Response time is less than 2000ms\"] = responseTime < 2000;",
											"",
											"//Response code validation",
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"//Validate Schema",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"message\": {",
											"      \"type\": \"string\"",
											"    },",
											"    \"statusCode\": {",
											"      \"type\": \"string\"",
											"    }",
											"  }",
											"};",
											"var data = JSON.parse(responseBody);",
											"tests[\"Valid schema\"] = tv4.validate(data, schema);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sessionToken",
										"type": "text",
										"value": "1234"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/v1.0/account/api/logout",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"v1.0",
										"account",
										"api",
										"logout"
									]
								},
								"description": "Here we are passing the Session token of the user, which was used for logout API\nExpecting an error response"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "42f23e78-3654-4356-a2e0-c1d30400a594",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "65d8204b-e660-4974-9cc8-5a3d43abd09f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}